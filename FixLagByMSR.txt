-- Fix Lag By Mastery (Optimized with Subtitle and Loading Effect)
local player = game.Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local RunService = game:GetService("RunService")

-- Set the Title and Text
local Title = "Fix Lag By Mastery"
local Text = "Optimizing..."
local Subtitle = "Please wait while we optimize your experience."
local Duration = 5

-- Display Title, Text, and Subtitle while loading
local loadingLabel = Instance.new("TextLabel")
loadingLabel.Size = UDim2.new(0, 300, 0, 50)
loadingLabel.Position = UDim2.new(0.5, -150, 0.5, -60)
loadingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
loadingLabel.BackgroundTransparency = 0.5
loadingLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
loadingLabel.TextSize = 20
loadingLabel.Text = Title .. "\n" .. Text
loadingLabel.Parent = game.CoreGui

local subtitleLabel = Instance.new("TextLabel")
subtitleLabel.Size = UDim2.new(0, 300, 0, 30)
subtitleLabel.Position = UDim2.new(0.5, -150, 0.5, 10)
subtitleLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
subtitleLabel.BackgroundTransparency = 0.5
subtitleLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
subtitleLabel.TextSize = 16
subtitleLabel.Text = Subtitle
subtitleLabel.Parent = game.CoreGui

-- Create a progress bar to simulate loading effect (like Chrome's loading bar)
local progressBarBackground = Instance.new("Frame")
progressBarBackground.Size = UDim2.new(0, 300, 0, 20)
progressBarBackground.Position = UDim2.new(0.5, -150, 0.5, 50)
progressBarBackground.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
progressBarBackground.BorderSizePixel = 0
progressBarBackground.Parent = game.CoreGui

local progressBar = Instance.new("Frame")
progressBar.Size = UDim2.new(0, 0, 0, 20)
progressBar.Position = UDim2.new(0, 0, 0, 0)
progressBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
progressBar.BorderSizePixel = 0
progressBar.Parent = progressBarBackground

-- Function to optimize game settings
local function optimizeSettings()
    -- Tắt hiệu ứng bóng đổ và ánh sáng không cần thiết
    game:GetService("Lighting").GlobalShadows = false
    game:GetService("Lighting").Ambient = Color3.fromRGB(0, 0, 0)
    game:GetService("Lighting").Brightness = 0
    game:GetService("Lighting").Technology = Enum.RenderingTechnology.Compatibility

    -- Giảm Field of View (FOV) của camera để giảm độ phức tạp
    camera.FieldOfView = 60  -- Hoặc thấp hơn nếu cần

    -- Tắt các hiệu ứng âm thanh
    userSettings().GameSettings.MasterVolume = 0
    userSettings().GameSettings.Sounds = false  -- Tắt hiệu ứng âm thanh

    -- Xóa các đối tượng không cần thiết trong game
    for _, obj in pairs(game.Workspace:GetChildren()) do
        if obj:IsA("Part") and not obj.Parent:FindFirstChild("Humanoid") then
            obj:Destroy()  -- Xóa các đối tượng không có giá trị (như trang trí)
        end
    end
end

-- Function to update FPS
local function updateFPS()
    local lastFrameTime = tick()
    local frameCount = 0
    local fps = 0
    while true do
        frameCount = frameCount + 1
        if tick() - lastFrameTime >= 1 then
            fps = frameCount
            frameCount = 0
            lastFrameTime = tick()
        end
        -- Hiển thị FPS trên màn hình
        loadingLabel.Text = Title .. "\n" .. Text .. "\nFPS: " .. fps
        RunService.RenderStepped:wait()
    end
end

-- Function to simulate progress bar update
local function updateProgressBar()
    local timePassed = 0
    while timePassed < Duration do
        local progress = timePassed / Duration
        progressBar.Size = UDim2.new(progress, 0, 0, 20)
        timePassed = timePassed + RunService.RenderStepped:wait()
    end
end

-- Hide UI elements after Duration
delay(Duration, function()
    loadingLabel:Remove()
    subtitleLabel:Remove()
    progressBarBackground:Remove()
end)

-- Execute optimizations and loading effects
optimizeSettings()

-- Start updating FPS and loading progress bar
updateFPS()
updateProgressBar()
